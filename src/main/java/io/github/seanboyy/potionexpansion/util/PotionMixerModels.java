package io.github.seanboyy.potionexpansion.util;

import net.minecraft.block.Block;
import net.minecraft.util.math.shapes.IBooleanFunction;
import net.minecraft.util.math.shapes.VoxelShape;
import net.minecraft.util.math.shapes.VoxelShapes;

import java.util.stream.Stream;

public class PotionMixerModels {
    public static final VoxelShape SHAPE_N_BOTH = Stream.of(
            Block.makeCuboidShape(1.75, 7.75, 10.75, 4.25, 10.25, 13.25),
            Block.makeCuboidShape(11.5, 7.5, 10.5, 14.5, 10.5, 13.5),
            Block.makeCuboidShape(12.5, 10.5, 11.5, 13.5, 11, 12.5),
            Block.makeCuboidShape(12, 11, 11, 14, 12, 13),
            Block.makeCuboidShape(12, 7, 11, 14, 7.5, 13),
            Block.makeCuboidShape(2.5, 12, 11.5, 3.5, 14, 12.5),
            Block.makeCuboidShape(12.5, 12, 11.5, 13.5, 14, 12.5),
            Block.makeCuboidShape(7.5, 7, 3.5, 8.5, 14, 4.5),
            Block.makeCuboidShape(3.5, 14, 11.5, 12.5, 15, 12.5),
            Block.makeCuboidShape(7.5, 14, 12.5, 8.5, 15, 14),
            Block.makeCuboidShape(7.5, 14, 4.5, 8.5, 15, 11.5),
            Block.makeCuboidShape(11.75, 7.75, 10.75, 14.25, 10.25, 13.25),
            Block.makeCuboidShape(2, 11, 11, 4, 12, 13),
            Block.makeCuboidShape(2.5, 10.5, 11.5, 3.5, 11, 12.5),
            Block.makeCuboidShape(1.5, 7.5, 10.5, 4.5, 10.5, 13.5),
            Block.makeCuboidShape(2, 7, 11, 4, 7.5, 13),
            Block.makeCuboidShape(6.5, 2.5, 2.5, 9.5, 5.5, 5.5),
            Block.makeCuboidShape(7.5, 5.5, 3.5, 8.5, 6, 4.5),
            Block.makeCuboidShape(7, 6, 3, 9, 7, 5),
            Block.makeCuboidShape(6.75, 2.75, 2.75, 9.25, 5.25, 5.25),
            Block.makeCuboidShape(7, 2, 3, 9, 2.5, 5),
            Block.makeCuboidShape(1, 0, 1, 15, 2, 15),
            Block.makeCuboidShape(2, 2, 11, 4, 7, 13),
            Block.makeCuboidShape(12, 2, 11, 14, 7, 13),
            Block.makeCuboidShape(4, 5, 11, 12, 7, 13),
            Block.makeCuboidShape(7.5, 2, 14, 8.5, 16, 15)
    ).reduce((v1, v2) -> VoxelShapes.combineAndSimplify(v1, v2, IBooleanFunction.OR)).get();

    public static final VoxelShape SHAPE_N_0 = Stream.of(
            Block.makeCuboidShape(2.5, 12, 11.5, 3.5, 14, 12.5),
            Block.makeCuboidShape(12.5, 12, 11.5, 13.5, 14, 12.5),
            Block.makeCuboidShape(7.5, 7, 3.5, 8.5, 14, 4.5),
            Block.makeCuboidShape(3.5, 14, 11.5, 12.5, 15, 12.5),
            Block.makeCuboidShape(7.5, 14, 12.5, 8.5, 15, 14),
            Block.makeCuboidShape(7.5, 14, 4.5, 8.5, 15, 11.5),
            Block.makeCuboidShape(6.5, 2.5, 2.5, 9.5, 5.5, 5.5),
            Block.makeCuboidShape(7.5, 5.5, 3.5, 8.5, 6, 4.5),
            Block.makeCuboidShape(7, 6, 3, 9, 7, 5),
            Block.makeCuboidShape(6.75, 2.75, 2.75, 9.25, 5.25, 5.25),
            Block.makeCuboidShape(7, 2, 3, 9, 2.5, 5),
            Block.makeCuboidShape(1, 0, 1, 15, 2, 15),
            Block.makeCuboidShape(2, 2, 11, 4, 7, 13),
            Block.makeCuboidShape(12, 2, 11, 14, 7, 13),
            Block.makeCuboidShape(4, 5, 11, 12, 7, 13),
            Block.makeCuboidShape(7.5, 2, 14, 8.5, 16, 15),
            Block.makeCuboidShape(11.75, 7.75, 10.75, 14.25, 10.25, 13.25),
            Block.makeCuboidShape(12, 7, 11, 14, 7.5, 13),
            Block.makeCuboidShape(12, 11, 11, 14, 12, 13),
            Block.makeCuboidShape(12.5, 10.5, 11.5, 13.5, 11, 12.5),
            Block.makeCuboidShape(11.5, 7.5, 10.5, 14.5, 10.5, 13.5)
    ).reduce((v1, v2) -> VoxelShapes.combineAndSimplify(v1, v2, IBooleanFunction.OR)).get();

    public static final VoxelShape SHAPE_N_1 = Stream.of(
            Block.makeCuboidShape(2.5, 12, 11.5, 3.5, 14, 12.5),
            Block.makeCuboidShape(12.5, 12, 11.5, 13.5, 14, 12.5),
            Block.makeCuboidShape(7.5, 7, 3.5, 8.5, 14, 4.5),
            Block.makeCuboidShape(3.5, 14, 11.5, 12.5, 15, 12.5),
            Block.makeCuboidShape(7.5, 14, 12.5, 8.5, 15, 14),
            Block.makeCuboidShape(7.5, 14, 4.5, 8.5, 15, 11.5),
            Block.makeCuboidShape(6.5, 2.5, 2.5, 9.5, 5.5, 5.5),
            Block.makeCuboidShape(7.5, 5.5, 3.5, 8.5, 6, 4.5),
            Block.makeCuboidShape(7, 6, 3, 9, 7, 5),
            Block.makeCuboidShape(6.75, 2.75, 2.75, 9.25, 5.25, 5.25),
            Block.makeCuboidShape(7, 2, 3, 9, 2.5, 5),
            Block.makeCuboidShape(1, 0, 1, 15, 2, 15),
            Block.makeCuboidShape(2, 2, 11, 4, 7, 13),
            Block.makeCuboidShape(12, 2, 11, 14, 7, 13),
            Block.makeCuboidShape(4, 5, 11, 12, 7, 13),
            Block.makeCuboidShape(7.5, 2, 14, 8.5, 16, 15),
            Block.makeCuboidShape(2, 11, 11, 4, 12, 13),
            Block.makeCuboidShape(2.5, 10.5, 11.5, 3.5, 11, 12.5),
            Block.makeCuboidShape(2, 7, 11, 4, 7.5, 13),
            Block.makeCuboidShape(1.75, 7.75, 10.75, 4.25, 10.25, 13.25),
            Block.makeCuboidShape(1.5, 7.5, 10.5, 4.5, 10.5, 13.5)
    ).reduce((v1, v2) -> VoxelShapes.combineAndSimplify(v1, v2, IBooleanFunction.OR)).get();

    public static final VoxelShape SHAPE_N_NONE = Stream.of(
            Block.makeCuboidShape(2.5, 12, 11.5, 3.5, 14, 12.5),
            Block.makeCuboidShape(12.5, 12, 11.5, 13.5, 14, 12.5),
            Block.makeCuboidShape(7.5, 7, 3.5, 8.5, 14, 4.5),
            Block.makeCuboidShape(3.5, 14, 11.5, 12.5, 15, 12.5),
            Block.makeCuboidShape(7.5, 14, 12.5, 8.5, 15, 14),
            Block.makeCuboidShape(7.5, 14, 4.5, 8.5, 15, 11.5),
            Block.makeCuboidShape(6.5, 2.5, 2.5, 9.5, 5.5, 5.5),
            Block.makeCuboidShape(7.5, 5.5, 3.5, 8.5, 6, 4.5),
            Block.makeCuboidShape(7, 6, 3, 9, 7, 5),
            Block.makeCuboidShape(6.75, 2.75, 2.75, 9.25, 5.25, 5.25),
            Block.makeCuboidShape(7, 2, 3, 9, 2.5, 5),
            Block.makeCuboidShape(1, 0, 1, 15, 2, 15),
            Block.makeCuboidShape(2, 2, 11, 4, 7, 13),
            Block.makeCuboidShape(12, 2, 11, 14, 7, 13),
            Block.makeCuboidShape(4, 5, 11, 12, 7, 13),
            Block.makeCuboidShape(7.5, 2, 14, 8.5, 16, 15)
    ).reduce((v1, v2) -> VoxelShapes.combineAndSimplify(v1, v2, IBooleanFunction.OR)).get();

    public static final VoxelShape SHAPE_W_BOTH = Stream.of(
            Block.makeCuboidShape(11.5, 12, 12.5, 12.5, 14, 13.5),
            Block.makeCuboidShape(11.5, 12, 2.5, 12.5, 14, 3.5),
            Block.makeCuboidShape(3.5, 7, 7.5, 4.5, 14, 8.5),
            Block.makeCuboidShape(11.5, 14, 3.5, 12.5, 15, 12.5),
            Block.makeCuboidShape(12.5, 14, 7.5, 14, 15, 8.5),
            Block.makeCuboidShape(4.5, 14, 7.5, 11.5, 15, 8.5),
            Block.makeCuboidShape(2.5, 2.5, 6.5, 5.5, 5.5, 9.5),
            Block.makeCuboidShape(3.5, 5.5, 7.5, 4.5, 6, 8.5),
            Block.makeCuboidShape(3, 6, 7, 5, 7, 9),
            Block.makeCuboidShape(2.75, 2.75, 6.75, 5.25, 5.25, 9.25),
            Block.makeCuboidShape(3, 2, 7, 5, 2.5, 9),
            Block.makeCuboidShape(1, 0, 1, 15, 2, 15),
            Block.makeCuboidShape(11, 2, 12, 13, 7, 14),
            Block.makeCuboidShape(11, 2, 2, 13, 7, 4),
            Block.makeCuboidShape(11, 5, 4, 13, 7, 12),
            Block.makeCuboidShape(14, 2, 7.5, 15, 16, 8.5),
            Block.makeCuboidShape(10.75, 7.75, 1.75, 13.25, 10.25, 4.25),
            Block.makeCuboidShape(11, 7, 2, 13, 7.5, 4),
            Block.makeCuboidShape(11, 11, 2, 13, 12, 4),
            Block.makeCuboidShape(11.5, 10.5, 2.5, 12.5, 11, 3.5),
            Block.makeCuboidShape(10.5, 7.5, 1.5, 13.5, 10.5, 4.5),
            Block.makeCuboidShape(11, 11, 12, 13, 12, 14),
            Block.makeCuboidShape(11.5, 10.5, 12.5, 12.5, 11, 13.5),
            Block.makeCuboidShape(11, 7, 12, 13, 7.5, 14),
            Block.makeCuboidShape(10.75, 7.75, 11.75, 13.25, 10.25, 14.25),
            Block.makeCuboidShape(10.5, 7.5, 11.5, 13.5, 10.5, 14.5)
    ).reduce((v1, v2) -> VoxelShapes.combineAndSimplify(v1, v2, IBooleanFunction.OR)).get();

    public static final VoxelShape SHAPE_W_0 = Stream.of(
            Block.makeCuboidShape(11.5, 12, 12.5, 12.5, 14, 13.5),
            Block.makeCuboidShape(11.5, 12, 2.5, 12.5, 14, 3.5),
            Block.makeCuboidShape(3.5, 7, 7.5, 4.5, 14, 8.5),
            Block.makeCuboidShape(11.5, 14, 3.5, 12.5, 15, 12.5),
            Block.makeCuboidShape(12.5, 14, 7.5, 14, 15, 8.5),
            Block.makeCuboidShape(4.5, 14, 7.5, 11.5, 15, 8.5),
            Block.makeCuboidShape(2.5, 2.5, 6.5, 5.5, 5.5, 9.5),
            Block.makeCuboidShape(3.5, 5.5, 7.5, 4.5, 6, 8.5),
            Block.makeCuboidShape(3, 6, 7, 5, 7, 9),
            Block.makeCuboidShape(2.75, 2.75, 6.75, 5.25, 5.25, 9.25),
            Block.makeCuboidShape(3, 2, 7, 5, 2.5, 9),
            Block.makeCuboidShape(1, 0, 1, 15, 2, 15),
            Block.makeCuboidShape(11, 2, 12, 13, 7, 14),
            Block.makeCuboidShape(11, 2, 2, 13, 7, 4),
            Block.makeCuboidShape(11, 5, 4, 13, 7, 12),
            Block.makeCuboidShape(14, 2, 7.5, 15, 16, 8.5),
            Block.makeCuboidShape(10.75, 7.75, 1.75, 13.25, 10.25, 4.25),
            Block.makeCuboidShape(11, 7, 2, 13, 7.5, 4),
            Block.makeCuboidShape(11, 11, 2, 13, 12, 4),
            Block.makeCuboidShape(11.5, 10.5, 2.5, 12.5, 11, 3.5),
            Block.makeCuboidShape(10.5, 7.5, 1.5, 13.5, 10.5, 4.5)
    ).reduce((v1, v2) -> VoxelShapes.combineAndSimplify(v1, v2, IBooleanFunction.OR)).get();

    public static final VoxelShape SHAPE_W_1 = Stream.of(
            Block.makeCuboidShape(11.5, 12, 12.5, 12.5, 14, 13.5),
            Block.makeCuboidShape(11.5, 12, 2.5, 12.5, 14, 3.5),
            Block.makeCuboidShape(3.5, 7, 7.5, 4.5, 14, 8.5),
            Block.makeCuboidShape(11.5, 14, 3.5, 12.5, 15, 12.5),
            Block.makeCuboidShape(12.5, 14, 7.5, 14, 15, 8.5),
            Block.makeCuboidShape(4.5, 14, 7.5, 11.5, 15, 8.5),
            Block.makeCuboidShape(2.5, 2.5, 6.5, 5.5, 5.5, 9.5),
            Block.makeCuboidShape(3.5, 5.5, 7.5, 4.5, 6, 8.5),
            Block.makeCuboidShape(3, 6, 7, 5, 7, 9),
            Block.makeCuboidShape(2.75, 2.75, 6.75, 5.25, 5.25, 9.25),
            Block.makeCuboidShape(3, 2, 7, 5, 2.5, 9),
            Block.makeCuboidShape(1, 0, 1, 15, 2, 15),
            Block.makeCuboidShape(11, 2, 12, 13, 7, 14),
            Block.makeCuboidShape(11, 2, 2, 13, 7, 4),
            Block.makeCuboidShape(11, 5, 4, 13, 7, 12),
            Block.makeCuboidShape(14, 2, 7.5, 15, 16, 8.5),
            Block.makeCuboidShape(11, 11, 12, 13, 12, 14),
            Block.makeCuboidShape(11.5, 10.5, 12.5, 12.5, 11, 13.5),
            Block.makeCuboidShape(11, 7, 12, 13, 7.5, 14),
            Block.makeCuboidShape(10.75, 7.75, 11.75, 13.25, 10.25, 14.25),
            Block.makeCuboidShape(10.5, 7.5, 11.5, 13.5, 10.5, 14.5)
    ).reduce((v1, v2) -> VoxelShapes.combineAndSimplify(v1, v2, IBooleanFunction.OR)).get();

    public static final VoxelShape SHAPE_W_NONE = Stream.of(
            Block.makeCuboidShape(11.5, 12, 12.5, 12.5, 14, 13.5),
            Block.makeCuboidShape(11.5, 12, 2.5, 12.5, 14, 3.5),
            Block.makeCuboidShape(3.5, 7, 7.5, 4.5, 14, 8.5),
            Block.makeCuboidShape(11.5, 14, 3.5, 12.5, 15, 12.5),
            Block.makeCuboidShape(12.5, 14, 7.5, 14, 15, 8.5),
            Block.makeCuboidShape(4.5, 14, 7.5, 11.5, 15, 8.5),
            Block.makeCuboidShape(2.5, 2.5, 6.5, 5.5, 5.5, 9.5),
            Block.makeCuboidShape(3.5, 5.5, 7.5, 4.5, 6, 8.5),
            Block.makeCuboidShape(3, 6, 7, 5, 7, 9),
            Block.makeCuboidShape(2.75, 2.75, 6.75, 5.25, 5.25, 9.25),
            Block.makeCuboidShape(3, 2, 7, 5, 2.5, 9),
            Block.makeCuboidShape(1, 0, 1, 15, 2, 15),
            Block.makeCuboidShape(11, 2, 12, 13, 7, 14),
            Block.makeCuboidShape(11, 2, 2, 13, 7, 4),
            Block.makeCuboidShape(11, 5, 4, 13, 7, 12),
            Block.makeCuboidShape(14, 2, 7.5, 15, 16, 8.5)
    ).reduce((v1, v2) -> VoxelShapes.combineAndSimplify(v1, v2, IBooleanFunction.OR)).get();

    public static final VoxelShape SHAPE_S_BOTH = Stream.of(
            Block.makeCuboidShape(12.5, 12, 3.5, 13.5, 14, 4.5),
            Block.makeCuboidShape(2.5, 12, 3.5, 3.5, 14, 4.5),
            Block.makeCuboidShape(7.5, 7, 11.5, 8.5, 14, 12.5),
            Block.makeCuboidShape(3.5, 14, 3.5, 12.5, 15, 4.5),
            Block.makeCuboidShape(7.5, 14, 2, 8.5, 15, 3.5),
            Block.makeCuboidShape(7.5, 14, 4.5, 8.5, 15, 11.5),
            Block.makeCuboidShape(6.5, 2.5, 10.5, 9.5, 5.5, 13.5),
            Block.makeCuboidShape(7.5, 5.5, 11.5, 8.5, 6, 12.5),
            Block.makeCuboidShape(7, 6, 11, 9, 7, 13),
            Block.makeCuboidShape(6.75, 2.75, 10.75, 9.25, 5.25, 13.25),
            Block.makeCuboidShape(7, 2, 11, 9, 2.5, 13),
            Block.makeCuboidShape(1, 0, 1, 15, 2, 15),
            Block.makeCuboidShape(12, 2, 3, 14, 7, 5),
            Block.makeCuboidShape(2, 2, 3, 4, 7, 5),
            Block.makeCuboidShape(4, 5, 3, 12, 7, 5),
            Block.makeCuboidShape(7.5, 2, 1, 8.5, 16, 2),
            Block.makeCuboidShape(1.75, 7.75, 2.75, 4.25, 10.25, 5.25),
            Block.makeCuboidShape(2, 7, 3, 4, 7.5, 5),
            Block.makeCuboidShape(2, 11, 3, 4, 12, 5),
            Block.makeCuboidShape(2.5, 10.5, 3.5, 3.5, 11, 4.5),
            Block.makeCuboidShape(1.5, 7.5, 2.5, 4.5, 10.5, 5.5),
            Block.makeCuboidShape(12, 11, 3, 14, 12, 5),
            Block.makeCuboidShape(12.5, 10.5, 3.5, 13.5, 11, 4.5),
            Block.makeCuboidShape(12, 7, 3, 14, 7.5, 5),
            Block.makeCuboidShape(11.75, 7.75, 2.75, 14.25, 10.25, 5.25),
            Block.makeCuboidShape(11.5, 7.5, 2.5, 14.5, 10.5, 5.5)
    ).reduce((v1, v2) -> VoxelShapes.combineAndSimplify(v1, v2, IBooleanFunction.OR)).get();

    public static final VoxelShape SHAPE_S_0 = Stream.of(
            Block.makeCuboidShape(12.5, 12, 3.5, 13.5, 14, 4.5),
            Block.makeCuboidShape(2.5, 12, 3.5, 3.5, 14, 4.5),
            Block.makeCuboidShape(7.5, 7, 11.5, 8.5, 14, 12.5),
            Block.makeCuboidShape(3.5, 14, 3.5, 12.5, 15, 4.5),
            Block.makeCuboidShape(7.5, 14, 2, 8.5, 15, 3.5),
            Block.makeCuboidShape(7.5, 14, 4.5, 8.5, 15, 11.5),
            Block.makeCuboidShape(6.5, 2.5, 10.5, 9.5, 5.5, 13.5),
            Block.makeCuboidShape(7.5, 5.5, 11.5, 8.5, 6, 12.5),
            Block.makeCuboidShape(7, 6, 11, 9, 7, 13),
            Block.makeCuboidShape(6.75, 2.75, 10.75, 9.25, 5.25, 13.25),
            Block.makeCuboidShape(7, 2, 11, 9, 2.5, 13),
            Block.makeCuboidShape(1, 0, 1, 15, 2, 15),
            Block.makeCuboidShape(12, 2, 3, 14, 7, 5),
            Block.makeCuboidShape(2, 2, 3, 4, 7, 5),
            Block.makeCuboidShape(4, 5, 3, 12, 7, 5),
            Block.makeCuboidShape(7.5, 2, 1, 8.5, 16, 2),
            Block.makeCuboidShape(1.75, 7.75, 2.75, 4.25, 10.25, 5.25),
            Block.makeCuboidShape(2, 7, 3, 4, 7.5, 5),
            Block.makeCuboidShape(2, 11, 3, 4, 12, 5),
            Block.makeCuboidShape(2.5, 10.5, 3.5, 3.5, 11, 4.5),
            Block.makeCuboidShape(1.5, 7.5, 2.5, 4.5, 10.5, 5.5)
    ).reduce((v1, v2) -> VoxelShapes.combineAndSimplify(v1, v2, IBooleanFunction.OR)).get();

    public static final VoxelShape SHAPE_S_1 = Stream.of(
            Block.makeCuboidShape(12.5, 12, 3.5, 13.5, 14, 4.5),
            Block.makeCuboidShape(2.5, 12, 3.5, 3.5, 14, 4.5),
            Block.makeCuboidShape(7.5, 7, 11.5, 8.5, 14, 12.5),
            Block.makeCuboidShape(3.5, 14, 3.5, 12.5, 15, 4.5),
            Block.makeCuboidShape(7.5, 14, 2, 8.5, 15, 3.5),
            Block.makeCuboidShape(7.5, 14, 4.5, 8.5, 15, 11.5),
            Block.makeCuboidShape(6.5, 2.5, 10.5, 9.5, 5.5, 13.5),
            Block.makeCuboidShape(7.5, 5.5, 11.5, 8.5, 6, 12.5),
            Block.makeCuboidShape(7, 6, 11, 9, 7, 13),
            Block.makeCuboidShape(6.75, 2.75, 10.75, 9.25, 5.25, 13.25),
            Block.makeCuboidShape(7, 2, 11, 9, 2.5, 13),
            Block.makeCuboidShape(1, 0, 1, 15, 2, 15),
            Block.makeCuboidShape(12, 2, 3, 14, 7, 5),
            Block.makeCuboidShape(2, 2, 3, 4, 7, 5),
            Block.makeCuboidShape(4, 5, 3, 12, 7, 5),
            Block.makeCuboidShape(7.5, 2, 1, 8.5, 16, 2),
            Block.makeCuboidShape(12, 11, 3, 14, 12, 5),
            Block.makeCuboidShape(12.5, 10.5, 3.5, 13.5, 11, 4.5),
            Block.makeCuboidShape(12, 7, 3, 14, 7.5, 5),
            Block.makeCuboidShape(11.75, 7.75, 2.75, 14.25, 10.25, 5.25),
            Block.makeCuboidShape(11.5, 7.5, 2.5, 14.5, 10.5, 5.5)
    ).reduce((v1, v2) -> VoxelShapes.combineAndSimplify(v1, v2, IBooleanFunction.OR)).get();

    public static final VoxelShape SHAPE_S_NONE = Stream.of(
            Block.makeCuboidShape(12.5, 12, 3.5, 13.5, 14, 4.5),
            Block.makeCuboidShape(2.5, 12, 3.5, 3.5, 14, 4.5),
            Block.makeCuboidShape(7.5, 7, 11.5, 8.5, 14, 12.5),
            Block.makeCuboidShape(3.5, 14, 3.5, 12.5, 15, 4.5),
            Block.makeCuboidShape(7.5, 14, 2, 8.5, 15, 3.5),
            Block.makeCuboidShape(7.5, 14, 4.5, 8.5, 15, 11.5),
            Block.makeCuboidShape(6.5, 2.5, 10.5, 9.5, 5.5, 13.5),
            Block.makeCuboidShape(7.5, 5.5, 11.5, 8.5, 6, 12.5),
            Block.makeCuboidShape(7, 6, 11, 9, 7, 13),
            Block.makeCuboidShape(6.75, 2.75, 10.75, 9.25, 5.25, 13.25),
            Block.makeCuboidShape(7, 2, 11, 9, 2.5, 13),
            Block.makeCuboidShape(1, 0, 1, 15, 2, 15),
            Block.makeCuboidShape(12, 2, 3, 14, 7, 5),
            Block.makeCuboidShape(2, 2, 3, 4, 7, 5),
            Block.makeCuboidShape(4, 5, 3, 12, 7, 5),
            Block.makeCuboidShape(7.5, 2, 1, 8.5, 16, 2)
    ).reduce((v1, v2) -> VoxelShapes.combineAndSimplify(v1, v2, IBooleanFunction.OR)).get();

    public static final VoxelShape SHAPE_E_BOTH = Stream.of(
            Block.makeCuboidShape(3.5, 12, 2.5, 4.5, 14, 3.5),
            Block.makeCuboidShape(3.5, 12, 12.5, 4.5, 14, 13.5),
            Block.makeCuboidShape(11.5, 7, 7.5, 12.5, 14, 8.5),
            Block.makeCuboidShape(3.5, 14, 3.5, 4.5, 15, 12.5),
            Block.makeCuboidShape(2, 14, 7.5, 3.5, 15, 8.5),
            Block.makeCuboidShape(4.5, 14, 7.5, 11.5, 15, 8.5),
            Block.makeCuboidShape(10.5, 2.5, 6.5, 13.5, 5.5, 9.5),
            Block.makeCuboidShape(11.5, 5.5, 7.5, 12.5, 6, 8.5),
            Block.makeCuboidShape(11, 6, 7, 13, 7, 9),
            Block.makeCuboidShape(10.75, 2.75, 6.75, 13.25, 5.25, 9.25),
            Block.makeCuboidShape(11, 2, 7, 13, 2.5, 9),
            Block.makeCuboidShape(1, 0, 1, 15, 2, 15),
            Block.makeCuboidShape(3, 2, 2, 5, 7, 4),
            Block.makeCuboidShape(3, 2, 12, 5, 7, 14),
            Block.makeCuboidShape(3, 5, 4, 5, 7, 12),
            Block.makeCuboidShape(1, 2, 7.5, 2, 16, 8.5),
            Block.makeCuboidShape(2.75, 7.75, 11.75, 5.25, 10.25, 14.25),
            Block.makeCuboidShape(3, 7, 12, 5, 7.5, 14),
            Block.makeCuboidShape(3, 11, 12, 5, 12, 14),
            Block.makeCuboidShape(3.5, 10.5, 12.5, 4.5, 11, 13.5),
            Block.makeCuboidShape(2.5, 7.5, 11.5, 5.5, 10.5, 14.5),
            Block.makeCuboidShape(3, 11, 2, 5, 12, 4),
            Block.makeCuboidShape(3.5, 10.5, 2.5, 4.5, 11, 3.5),
            Block.makeCuboidShape(3, 7, 2, 5, 7.5, 4),
            Block.makeCuboidShape(2.75, 7.75, 1.75, 5.25, 10.25, 4.25),
            Block.makeCuboidShape(2.5, 7.5, 1.5, 5.5, 10.5, 4.5)
    ).reduce((v1, v2) -> VoxelShapes.combineAndSimplify(v1, v2, IBooleanFunction.OR)).get();

    public static final VoxelShape SHAPE_E_0 = Stream.of(
            Block.makeCuboidShape(3.5, 12, 2.5, 4.5, 14, 3.5),
            Block.makeCuboidShape(3.5, 12, 12.5, 4.5, 14, 13.5),
            Block.makeCuboidShape(11.5, 7, 7.5, 12.5, 14, 8.5),
            Block.makeCuboidShape(3.5, 14, 3.5, 4.5, 15, 12.5),
            Block.makeCuboidShape(2, 14, 7.5, 3.5, 15, 8.5),
            Block.makeCuboidShape(4.5, 14, 7.5, 11.5, 15, 8.5),
            Block.makeCuboidShape(10.5, 2.5, 6.5, 13.5, 5.5, 9.5),
            Block.makeCuboidShape(11.5, 5.5, 7.5, 12.5, 6, 8.5),
            Block.makeCuboidShape(11, 6, 7, 13, 7, 9),
            Block.makeCuboidShape(10.75, 2.75, 6.75, 13.25, 5.25, 9.25),
            Block.makeCuboidShape(11, 2, 7, 13, 2.5, 9),
            Block.makeCuboidShape(1, 0, 1, 15, 2, 15),
            Block.makeCuboidShape(3, 2, 2, 5, 7, 4),
            Block.makeCuboidShape(3, 2, 12, 5, 7, 14),
            Block.makeCuboidShape(3, 5, 4, 5, 7, 12),
            Block.makeCuboidShape(1, 2, 7.5, 2, 16, 8.5),
            Block.makeCuboidShape(2.75, 7.75, 11.75, 5.25, 10.25, 14.25),
            Block.makeCuboidShape(3, 7, 12, 5, 7.5, 14),
            Block.makeCuboidShape(3, 11, 12, 5, 12, 14),
            Block.makeCuboidShape(3.5, 10.5, 12.5, 4.5, 11, 13.5),
            Block.makeCuboidShape(2.5, 7.5, 11.5, 5.5, 10.5, 14.5)
    ).reduce((v1, v2) -> VoxelShapes.combineAndSimplify(v1, v2, IBooleanFunction.OR)).get();

    public static final VoxelShape SHAPE_E_1 = Stream.of(
            Block.makeCuboidShape(3.5, 12, 2.5, 4.5, 14, 3.5),
            Block.makeCuboidShape(3.5, 12, 12.5, 4.5, 14, 13.5),
            Block.makeCuboidShape(11.5, 7, 7.5, 12.5, 14, 8.5),
            Block.makeCuboidShape(3.5, 14, 3.5, 4.5, 15, 12.5),
            Block.makeCuboidShape(2, 14, 7.5, 3.5, 15, 8.5),
            Block.makeCuboidShape(4.5, 14, 7.5, 11.5, 15, 8.5),
            Block.makeCuboidShape(10.5, 2.5, 6.5, 13.5, 5.5, 9.5),
            Block.makeCuboidShape(11.5, 5.5, 7.5, 12.5, 6, 8.5),
            Block.makeCuboidShape(11, 6, 7, 13, 7, 9),
            Block.makeCuboidShape(10.75, 2.75, 6.75, 13.25, 5.25, 9.25),
            Block.makeCuboidShape(11, 2, 7, 13, 2.5, 9),
            Block.makeCuboidShape(1, 0, 1, 15, 2, 15),
            Block.makeCuboidShape(3, 2, 2, 5, 7, 4),
            Block.makeCuboidShape(3, 2, 12, 5, 7, 14),
            Block.makeCuboidShape(3, 5, 4, 5, 7, 12),
            Block.makeCuboidShape(1, 2, 7.5, 2, 16, 8.5),
            Block.makeCuboidShape(3, 11, 2, 5, 12, 4),
            Block.makeCuboidShape(3.5, 10.5, 2.5, 4.5, 11, 3.5),
            Block.makeCuboidShape(3, 7, 2, 5, 7.5, 4),
            Block.makeCuboidShape(2.75, 7.75, 1.75, 5.25, 10.25, 4.25),
            Block.makeCuboidShape(2.5, 7.5, 1.5, 5.5, 10.5, 4.5)
    ).reduce((v1, v2) -> VoxelShapes.combineAndSimplify(v1, v2, IBooleanFunction.OR)).get();

    public static final VoxelShape SHAPE_E_NONE = Stream.of(
            Block.makeCuboidShape(3.5, 12, 2.5, 4.5, 14, 3.5),
            Block.makeCuboidShape(3.5, 12, 12.5, 4.5, 14, 13.5),
            Block.makeCuboidShape(11.5, 7, 7.5, 12.5, 14, 8.5),
            Block.makeCuboidShape(3.5, 14, 3.5, 4.5, 15, 12.5),
            Block.makeCuboidShape(2, 14, 7.5, 3.5, 15, 8.5),
            Block.makeCuboidShape(4.5, 14, 7.5, 11.5, 15, 8.5),
            Block.makeCuboidShape(10.5, 2.5, 6.5, 13.5, 5.5, 9.5),
            Block.makeCuboidShape(11.5, 5.5, 7.5, 12.5, 6, 8.5),
            Block.makeCuboidShape(11, 6, 7, 13, 7, 9),
            Block.makeCuboidShape(10.75, 2.75, 6.75, 13.25, 5.25, 9.25),
            Block.makeCuboidShape(11, 2, 7, 13, 2.5, 9),
            Block.makeCuboidShape(1, 0, 1, 15, 2, 15),
            Block.makeCuboidShape(3, 2, 2, 5, 7, 4),
            Block.makeCuboidShape(3, 2, 12, 5, 7, 14),
            Block.makeCuboidShape(3, 5, 4, 5, 7, 12),
            Block.makeCuboidShape(1, 2, 7.5, 2, 16, 8.5)
    ).reduce((v1, v2) -> VoxelShapes.combineAndSimplify(v1, v2, IBooleanFunction.OR)).get();
}
